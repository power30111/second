#https://www.acmicpc.net/problem/2004
import sys
from collections import deque
input = sys.stdin.readline

n,m=map(int,input().split())
#0으로 끝나게끔 만드는 소인수들은 2와 5의 조합인 10밖에없다는건가?

def ten(A,B):   #A는 입력받은 숫자 B는 2또는 5
    result=0
    while A>0:
        result+=A//B
        A//=B
    return result

num5=ten(n,5)-ten(m,5)-ten(n-m,5)
num2=ten(n,2)-ten(m,2)-ten(n-m,2)
print(min(num5,num2))

#일단.. 조합식을 풀어보면 n!/((n-m)!*r!) 이다. 이부분을 그대로 코드로 표현하면 입력가능한수가
#무려 2,000,000,000이기 때문에 시간초과가 난다. 그렇다면 어떻게 생각했어야햇을까?
#뒤에서 0이 발생하는 경우는 2와 5가 만나는 경우에 발생한다.(2*5의꼴) 어떠한 경우에도 10이 
#곱해지게 되면 자연스레 뒤에 0이 하나 더 붙게된다. 그렇다면. 어떠한 숫자를 소인수분해하여
#2의 개수와 5의 개수를 찾은뒤 결합할수있는 최대(2의개수 또는 5의개수중 적은수)값이 0의 개수인것을
#알수있다. 2의 개수와 5의 개수는 어떤식으로 찾을수있을까?
#2의경우 A에 2를 나눈값을 result에 넣는다. 그이후 나누는 값의 승수를 늘려준다. 그럼
#다음은 A에 4를 나눈값을 result에 넣고... 8나눈값을 넣고... 이런식으로 할수있는만큼 최대한해본다.
#5의 경우도 마찬가지로 5로 나누고 25로 나누고 125로 나누고...
#나는 A값을 줄여나가는식으로 위 논리를 구현하였다.